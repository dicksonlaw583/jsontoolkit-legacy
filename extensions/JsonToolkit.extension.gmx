<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<extension>
  <name>JsonToolkit</name>
  <version>1.1.1</version>
  <packageID></packageID>
  <ProductID></ProductID>
  <date>07/02/19</date>
  <license>Free to use, also for commercial games.</license>
  <description></description>
  <helpfile></helpfile>
  <installdir></installdir>
  <classname></classname>
  <androidclassname></androidclassname>
  <sourcedir></sourcedir>
  <androidsourcedir></androidsourcedir>
  <macsourcedir></macsourcedir>
  <maclinkerflags></maclinkerflags>
  <maccompilerflags></maccompilerflags>
  <androidinject></androidinject>
  <androidmanifestinject></androidmanifestinject>
  <iosplistinject></iosplistinject>
  <androidactivityinject></androidactivityinject>
  <gradleinject></gradleinject>
  <iosSystemFrameworks/>
  <iosThirdPartyFrameworks/>
  <ConfigOptions>
    <Config name="Default">
      <CopyToMask>105554163798254</CopyToMask>
    </Config>
  </ConfigOptions>
  <androidPermissions/>
  <IncludedResources/>
  <files>
    <file>
      <filename>JsonToolkit.gml</filename>
      <origname>extensions\JsonToolkit.gml</origname>
      <init></init>
      <final></final>
      <kind>2</kind>
      <uncompress>0</uncompress>
      <ConfigOptions>
        <Config name="Default">
          <CopyToMask>9223372036854775807</CopyToMask>
        </Config>
      </ConfigOptions>
      <ProxyFiles/>
      <functions>
        <function>
          <name>json_exists</name>
          <externalName>json_exists</externalName>
          <kind>11</kind>
          <help>json_exists(jsonstruct, ...)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>json_get</name>
          <externalName>json_get</externalName>
          <kind>11</kind>
          <help>json_get(jsonstruct, ...)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>json_destroy</name>
          <externalName>json_destroy</externalName>
          <kind>11</kind>
          <help>json_destroy(@jsonstruct)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>_json_not_ds</name>
          <externalName>_json_not_ds</externalName>
          <kind>11</kind>
          <help>_json_not_ds(ds, type)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>json_set</name>
          <externalName>json_set</externalName>
          <kind>11</kind>
          <help>json_set(@jsonstruct, ...)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>json_unset</name>
          <externalName>json_unset</externalName>
          <kind>11</kind>
          <help>json_unset(@jsonstruct, ...)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>json_clone</name>
          <externalName>json_clone</externalName>
          <kind>11</kind>
          <help>json_clone(jsonstruct)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>json_insert</name>
          <externalName>json_insert</externalName>
          <kind>11</kind>
          <help>json_insert(@jsonstruct, ..., value)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>json_encode_as_list</name>
          <externalName>json_encode_as_list</externalName>
          <kind>11</kind>
          <help>json_encode_as_list(jsonstruct)</help>
          <returnType>1</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>json_iterate</name>
          <externalName>json_iterate</externalName>
          <kind>11</kind>
          <help>json_iterate(jsonstruct, ..., type)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>json_has_next</name>
          <externalName>json_has_next</externalName>
          <kind>11</kind>
          <help>json_has_next(iterator)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>json_next</name>
          <externalName>json_next</externalName>
          <kind>11</kind>
          <help>json_next(@jsoniterator)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>json_load</name>
          <externalName>json_load</externalName>
          <kind>11</kind>
          <help>json_load(fname)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>json_save</name>
          <externalName>json_save</externalName>
          <kind>11</kind>
          <help>json_save(fname, jsonstruct)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>1</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>json_set_nested</name>
          <externalName>json_set_nested</externalName>
          <kind>11</kind>
          <help>json_set_nested(@jsonstruct, ..., subjsonstruct)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>json_insert_nested</name>
          <externalName>json_insert_nested</externalName>
          <kind>11</kind>
          <help>json_insert_nested(@jsonstruct, ..., subjsonstruct)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>JsonStruct</name>
          <externalName>JsonStruct</externalName>
          <kind>11</kind>
          <help>JsonStruct(toplevel_or_filename)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>JsonList</name>
          <externalName>JsonList</externalName>
          <kind>11</kind>
          <help>JsonList(...)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>JsonMap</name>
          <externalName>JsonMap</externalName>
          <kind>11</kind>
          <help>JsonMap(...)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>_json_dig</name>
          <externalName>_json_dig</externalName>
          <kind>11</kind>
          <help>_json_dig(jsonstruct, @path, ignore_last_n)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>_json_rc4</name>
          <externalName>_json_rc4</externalName>
          <kind>11</kind>
          <help>_json_rc4(@buffer, key, offset, length)</help>
          <returnType>1</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>_json_rc4_decrypt_string</name>
          <externalName>_json_rc4_decrypt_string</externalName>
          <kind>11</kind>
          <help>_json_rc4_decrypt_string(str, key)</help>
          <returnType>1</returnType>
          <argCount>2</argCount>
          <args>
            <arg>1</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>_json_rc4_encrypt_string</name>
          <externalName>_json_rc4_encrypt_string</externalName>
          <kind>11</kind>
          <help>_json_rc4_encrypt_string(str, key)</help>
          <returnType>1</returnType>
          <argCount>2</argCount>
          <args>
            <arg>1</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>json_encrypt</name>
          <externalName>json_encrypt</externalName>
          <kind>11</kind>
          <help>json_encrypt(jsonstruct, key)</help>
          <returnType>1</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>json_decrypt</name>
          <externalName>json_decrypt</externalName>
          <kind>11</kind>
          <help>json_decrypt(jsonencstr, key)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>1</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>json_save_encrypted</name>
          <externalName>json_save_encrypted</externalName>
          <kind>11</kind>
          <help>json_save_encrypted(fname, jsonstruct, key)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>1</arg>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>json_load_encrypted</name>
          <externalName>json_load_encrypted</externalName>
          <kind>11</kind>
          <help>json_load_encrypted(fname, key)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>1</arg>
            <arg>1</arg>
          </args>
        </function>
      </functions>
      <constants/>
    </file>
  </files>
</extension>
